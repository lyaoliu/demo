<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
      <!--注解驱动-->
    <mvc:annotation-driven enable-matrix-variables="true">
        <mvc:message-converters  >
            <!-- 配置fastjson中实现HttpMessageConverter接口的转换器 -->
            <!-- FastJsonHttpMessageConverter是fastjson中实现了HttpMessageConverter接口的转换器 -->
            <bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4">
                <!-- 加入支持的媒体类型：返回contentType -->
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json</value>
                    </list>
                </property>
                <property name="fastJsonConfig">
                    <bean class="com.alibaba.fastjson.support.config.FastJsonConfig">
                        <property name="serializerFeatures">
                            <list>
                                <value>DisableCircularReferenceDetect</value>
                                <value>WriteNullNumberAsZero</value>    <!--数值字段如果为null,输出为0,而非null-->
                                <value>WriteNullStringAsEmpty</value>   <!--字符类型字段如果为null,输出为”“,而非null-->
                                <value>WriteNullListAsEmpty</value>   <!--List字段如果为null,输出为[],而非null-->
                                <value>WriteNullBooleanAsFalse</value>   <!--Boolean字段如果为null,输出为false,而非null-->
                            </list>
                        </property>
                    </bean>
                </property>
            </bean>
        </mvc:message-converters>

    </mvc:annotation-driven>
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com" />

    <!--  对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          p:prefix="/" p:suffix=".jsp"/>
    <!--第一种模式-->
    <!-- 静态资源 -->
    <!--     <mvc:resources location="/" mapping="/**/*.html"/>-->
    <mvc:resources location="/" mapping="/**/*.js"/>
    <mvc:resources location="/" mapping="/**/*.css"/>
    <mvc:resources location="/" mapping="/**/*.png"/>
    <mvc:resources location="/" mapping="/**/*.jpg"/>
    <mvc:resources location="/" mapping="/**/*.gif"/>
    <!--第二种模式-->
    <!-- 加载静态文件 -->
    <!--使用默认的Servlet来响应静态文件-->
    <!--不拦截静态资源的前提是静态资源放在webapp下-->
    <mvc:default-servlet-handler/>
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 500M 1024*1024*500 -->
        <property name="maxUploadSize" value="524288000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="4096" />
    </bean>
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>